<?php

/**
 * @file
 * Create an interface for the library helpdesk
 */

/**
 * Implements hook_menu();
 * @return boolean
 */
function bibdk_helpdesk_menu() {
  $items['helpdesk'] = array(
    'title' => 'Helpdesk',
    'description' => 'Library helpdesk form.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bibdk_helpdesk_form'),
    'access arguments' => array('access content'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['helpdesk/queried'] = array(// if we provide our own result page?
    'title' => 'Helpdesk',
    'description' => 'Library helpdesk form result.',
    'page callback' => 'bibdk_helpdesk_execute',
    'page arguments' => array(),
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_block_info().
 */
function bibdk_helpdesk_block_info() {
  $blocks['bibdk-helpdesk-teaser'] = array(
    'info' => t('Bibliotek.dk : Library helpdesk teaser'),
    'cache' => DRUPAL_NO_CACHE,
    'description' => 'Library helpdesk teaser form.',
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function bibdk_helpdesk_block_view($delta = '') {
  drupal_add_css(drupal_get_path('module', 'bibdk_helpdesk') . '/css/bibdk_helpdesk.css');

  $dir = drupal_get_path('module', 'bibdk_helpdesk') . '/images/normal';
  $images = file_scan_directory($dir, '/.*\.png$/', array('key' => 'name'));
  $image = array_rand($images);

  $block = array();
  switch ($delta) {
    case 'bibdk-helpdesk-teaser':
      $block['subject'] = t('Library Helpdesk');
      $block['content'] = theme('bibdk_helpdesk_block', array(
        'form' => drupal_get_form('bibdk_helpdesk_teaser_form'),
        'image_css' => $image)
      );
      break;
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function bibdk_helpdesk_theme() {
  $path = drupal_get_path('module', 'bibdk_helpdesk') . '/theme';
  $theme_array = array(
    'bibdk_helpdesk_block' => array(
      'render element' => 'elements',
      'path' => $path,
      'template' => 'bibdk-helpdesk-block',
      'variables' => array('image_css', 'form'),
    ),
    'theme_bibdk_helpdesk_form' => array(
      'render element' => 'form',
      'path' => $path,
      'template' => 'bibdk-helpdesk-form',
    ),
    'theme_bibdk_helpdesk_result' => array(
      'render element' => 'form',
      'path' => $path,
      'template' => 'bibdk-helpdesk-result',
    ),
  );
  return $theme_array;
}

function bibdk_helpdesk_teaser_form() {

  $form['bibdk_helpdesk_teaser'] = array(
    '#type' => 'fieldset',
    '#title' => t('Library helpdesk'),
    '#description' => t('You can contact a librarian, if you need a personalized service.'),
    '#tree' => TRUE,
  );
  //$form['actions'] = array('#type' => 'actions');
  $form['bibdk_helpdesk_teaser']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Ask the helpdesk'),
  );
  $form['#submit'][] = '_bibdk_helpdesk_teaser_form_submit';
  //$form['#theme'] = 'theme_bibdk_helpdesk_teaser_form';
  return $form;
}

function _bibdk_helpdesk_teaser_form_submit() {
  $form_state['redirect'] = FALSE;
  $url = 'helpdesk';
  drupal_goto($url, array());
}

function bibdk_helpdesk_form() {
  $form['bibdk_helpdesk'] = array(
    '#type' => 'fieldset',
    '#title' => t('Ask Library helpdesk'),
    '#description' => t('Library helpdesk.'),
    '#tree' => FALSE,
  );

  $form['bibdk_helpdesk']['Title'] = array(
    '#type' => 'hidden',
    '#value' => 'Nyt spÃ¸rgsmÃ¥l modtaget fra bibliotek.dk'
  );

  $form['bibdk_helpdesk']['ReceptionMethodId'] = array(
    '#type' => 'hidden',
    '#value' => '7'
  );

  $form['bibdk_helpdesk']['RedirectSuccess'] = array(
    '#type' => 'hidden',
    '#value' => 'http://biblioteksvagten.dk/kvittering.asp'
  );

  $form['bibdk_helpdesk']['TimeLimitId'] = array(
    '#type' => 'select',
    '#title' => t('Time limit'),
    //'#title_display'  => 'invisible',
    '#options' => array(
      t('No time limit'),
      "2 " . t('Hours'),
      "4 " . t('Hours'),
      "24 " . t('Hours'),
      "1 " . t('Day'),
      "1 " . t('Week')
    ),
    '#default_value' => '',
  );
  $form['bibdk_helpdesk']['QuestionText'] = array(
    '#type' => 'textarea',
    '#title' => t('My question is'),
    '#default_value' => '',
  );
  
  $form['bibdk_helpdesk']['PurposeId'] = array(
    "#type" => "fieldset",
    "#title" => "help",
    "#after_build" => array("_remove_validation"),
    
  );
  $form['bibdk_helpdesk']['PurposeId'][] = array(
    '#type' => 'radios',
    '#title' => t('The information will be used for'),
    '#options' => array(
      '1' => t('General interest / hobby'),
      '6' => t('Business'),
      
    ),
    '#parents' => array('PurposeId'),
    '#spawned' => TRUE,
  );

  
  $form['bibdk_helpdesk']['PurposeId'][] = array(
    '#type' => 'radios',
    '#title' => t('or in connection with assignment for'),
    '#options' => array(
      '3' => t('Primary school'),
      '2' => t('Gymnasium, EUC, VUC, SOSU or other short-cycle higher education'),
      '4' => t('Medium-cycle higher or higher education'),
      '5' => t('University education or research'),
    ),
    '#spawned' => TRUE,
    '#parents' => array('PurposeId'), 
  );
  $form['bibdk_helpdesk']['CustomerName'] = array(
    '#type' => 'textfield',
    '#title' => t('Name'),
    '#default_value' => '',
    '#required' => TRUE
  );

  $form['bibdk_helpdesk']['CustomerPostalCode'] = array(
    '#type' => 'textfield',
    '#title' => t('PostalCode'),
    '#default_value' => '',
    '#required' => TRUE
  );

  $form['bibdk_helpdesk']['CustomerEmail'] = array(
    '#type' => 'textfield',
    '#title' => t('Email'),
    '#default_value' => '',
    '#required' => TRUE
  );

  $form['bibdk_helpdesk']['CustomerPhone'] = array(
    '#type' => 'textfield',
    '#title' => t('Phone'),
    '#default_value' => '',
    '#required' => TRUE
  );
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Ask the helpdesk'),
  );

  $form['#theme'] = 'theme_bibdk_helpdesk_form';
  return $form;
}

/**
 *
 * remove required validation from Purpose ID  
 * 
 */
function _remove_validation($element){
  _bibdk_helpdesk_disable_validation($element);
  return $element;
}

/*
 * Recursive function.
 * Removes required validation flag for specified form element and all its children.
 */
function _bibdk_helpdesk_disable_validation(&$element) {
  unset($element['#needs_validation']);
  foreach(element_children($element) as $key) {
    _bibdk_helpdesk_disable_validation($element[$key]);
  }
}

/**
 * Validate helpdesk form submission.
 */
function bibdk_helpdesk_form_validate($form, &$form_state) {
  if (!valid_email_address($form_state['values']['CustomerEmail'])) {
    form_set_error("CustomerEmail", t("Email needs to be a valid email"));
  }
}

/**
 * Process helpdesk form submission.
 */
function bibdk_helpdesk_form_submit($form, &$form_state) {
  $curl = new microcurl();
  try {
    $curl->set_url("http://biblioteksvagten.dk/adm/QuestionFormHandler.axd");
    $curl->set_post($form_state['values']);
    $result = $curl->get();
  } catch (Exception $e) {
    drupal_set_message("An error happened : $e");
    return;
  }

  if ($curl->has_error()) {
    drupal_set_message("Sorry we could not submit your query, please try again later", "error");
    watchdog("submit", "ERROR: cannot submit to helpdesk", $curl->has_error(), WATCHDOG_ERROR);
    return;
  }

  $status = $curl->get_status();
  drupal_goto($status['redirect_url']);
}
